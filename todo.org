* Algebraic notation
** TODO Translate move to algebraic notation
- [ ] If move is made via algebraic notation, we are good
- [ ] If not, get piece type, first part of the move, empty if pawn
- [ ] Translate destination to board notation
- [ ] Check if some piece was captured, add x to move
- [ ] Check if similar pieces could go to same position, disambiguation of rank, file, both
- [ ] If check, add plus
- [ ] If check-mate, add #

** DONE Parse games with clock information
- [X] Essential since many games from online databases come with clock information

** DONE Parse big files to be used in unit tests
- [X] Essential since many games are aggregated into same file
- [X] Same logic as parse-pgn, but we can add a callback to be invoked when every new game is collected
  

* Chess engine
** TODO Detect draw

** TODO Stockfish integration


* Distributed game
** DONE TCP Server

** DONE Websocket chess server
- [X] Create new project with lein new, add Aleph as dependency
- [X] Replace default main method with Aleph start server
- [X] Add websocket endpoint, simple hello world, ping pong
- [X] Test websocket in websocket telnet

** TODO Improve logic of concurrent chess game with timeouts, clocks

** TODO Create load testing scripts using Gatling (or similar), inject failures, check for resource/memory leaks


* Graphical Interface
** TODO Improve Chess UI (canvas) - icons and highlighting of possible moves, selected pieces

** TODO Improve Chess UI (component) - add side panel for moves, navigating moves, etc


* Online chess platform
** TODO Website layout

** TODO Define scope of website (player profiles, x AI, x Human, history, live watch, etc)

** TODO Use Apache Shiro to store website users


* Command line game client
** TODO Creat command line client application for playing the chess game
- [ ] How to add maven dependencies in leiningen?
- [ ] What was the name of that library that allows to create curses applications in Java
- [ ] How to create a new profile in a lein project?



